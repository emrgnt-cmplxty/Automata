#!/bin/bash

# TODO - Do we need to call 'cd ../' everywhere we are doing so?

# Install the project with poetry
cd ../ 
# Upgrade pip
pip3 install --upgrade pip
# Install poetry and the project
pip3 install poetry && poetry install

# Setup pre-commit hooks
pre-commit install

cd -

# Set up .env
cp ../.env.example ../.env
OPEN_API_KEY=${OPEN_API_KEY}
GITHUB_API_KEY=${GITHUB_API_KEY}
CONVERSATION_DB_PATH="$PWD/conversation_db.sqlite3"
TASK_DB_PATH="$PWD/task_db.sqlite3"
TASKS_OUTPUT_PATH="$PWD/local_tasks"
REPOSITORY_NAME="emrgnt-cmplxty/Automata"

# Safeguard to check if the variables are set
if [[ -z "${OPEN_API_KEY}" ]]; then
  echo "OPEN_API_KEY is unset. Please set the environment variable and run the script again."
  exit 1
fi

if [[ -z "${GITHUB_API_KEY}" ]]; then
  echo "GITHUB_API_KEY is unset. Please set the environment variable and run the script again."
  exit 1
fi

# Detect the operating system
if [[ "$OSTYPE" == "darwin"* ]]; then
    # Mac OSX
    sed -i '' "s|your_openai_api_key|$OPEN_API_KEY|" ../.env
    sed -i '' "s|your_github_api_key|$GITHUB_API_KEY|" ../.env
    sed -i '' "s|your_conversation_db_path|$CONVERSATION_DB_PATH|" ../.env
    sed -i '' "s|your_task_db_path|$TASK_DB_PATH|" ../.env
    sed -i '' "s|your_tasks_output_path|$TASKS_OUTPUT_PATH|" ../.env
    sed -i '' "s|your_repository_name|$REPOSITORY_NAME|" ../.env
else
    # Linux and others
    sed -i "s|your_openai_api_key|$OPEN_API_KEY|" ../.env
    sed -i "s|your_github_api_key|$GITHUB_API_KEY|" ../.env
    sed -i "s|your_conversation_db_path|$CONVERSATION_DB_PATH|" ../.env
    sed -i "s|your_task_db_path|$TASK_DB_PATH|" ../.env
    sed -i "s|your_tasks_output_path|$TASKS_OUTPUT_PATH|" ../.env
    sed -i "s|your_repository_name|$REPOSITORY_NAME|" ../.env
fi
# Additional Notes -
# Default Max Workers is 8, manually change the .env to update this quantity.

# Fetch the submodules
cd ../ && git submodule update --init --recursive && cd -

### NOTE - You must install git-lfs, if you have not done so already

### For Ubuntu, run the following:
##  sudo apt-get install git-lfs
### For Mac, run the following:
##  brew install git-lfs
###
### Then, initialize by running the following:
##  git lfs install
##  git lfs pull
